{"config":{"lang":["fr"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Projet int\u00e9grateur 1","text":""},{"location":"approche/","title":"Approches de d\u00e9veloppement logiciel","text":"<p> Objectifs de la section</p> <p>3-6 Vocabulaire de la m\u00e9thode Agile  3-7 Mise en application pratique de l'ensemble des principes d\u2019une m\u00e9thode d\u2019analyse 3-8 \u00c9tapes de d\u00e9veloppement d'un projet 4-4 Compr\u00e9hension des points importants du dossier de conception</p> <p> Temps requis</p> <p>40 minutes</p>"},{"location":"approche/#les-6-phases-du-developpement-logiciel","title":"Les 6\u00a0phases du d\u00e9veloppement logiciel","text":"<p>Le d\u00e9veloppement de logiciel est compos\u00e9 par 6\u00a0phases (ou \u00e9tapes)\u00a0:</p>"},{"location":"approche/#1-analyse-et-modelisation","title":"1. Analyse et mod\u00e9lisation","text":"<p>Cette phase vise \u00e0 identifier et expliciter les besoins des entit\u00e9s clientes et des personnes utilisatrices du syst\u00e8me. L'information est collig\u00e9e dans le document d'analyse. Cette collecte d'information se fait \u00e0 partir de diverses sources dont\u00a0: </p> <ul> <li>l'entrevue avec les entit\u00e9s clientes et les personnes utilisatrices potentielles;</li> <li>les \u00e9tudes de march\u00e9;</li> <li>l'entretien avec des personnes expertes du domaine;</li> <li>l'\u00e9tude du domaine applicatif (syst\u00e8mes proposant des fonctionnalit\u00e9s comparables); et</li> <li>la r\u00e9f\u00e9rence \u00e0 des normes et des r\u00e8glementations.</li> </ul> <p>Les besoins identifi\u00e9s peuvent \u00eatre appel\u00e9s \u00e0 changer ou \u00e0 \u00eatre raffin\u00e9s durant le d\u00e9veloppement du syst\u00e8me. Cette phase repr\u00e9sente de 10 \u00e0 15\u00a0% du temps de d\u00e9veloppement.</p>"},{"location":"approche/#2-conception","title":"2. Conception","text":"<p>La conception permet de d\u00e9finir la structure du syst\u00e8me qui sera mis place pour r\u00e9pondre aux besoins. La conception peut \u00eatre divis\u00e9e en trois grandes phases\u00a0:</p> <ul> <li>la conception de l'architecture du syst\u00e8me (organisation dans la structure interne);</li> <li>la conception des flux et du stockage des donn\u00e9es; et</li> <li>la conception des fonctionnalit\u00e9s du syst\u00e8me.</li> </ul> <p>C'est une \u00e9tape pour laquelle l'on peut avoir envie de faire des coins ronds ou de l'ignorer compl\u00e8tement. Toutefois, plusieurs probl\u00e8mes d'impl\u00e9mentation peuvent \u00eatre r\u00e9solu \u00e0 cette \u00e9tape et ils sont plus rapides et moins co\u00fbteux \u00e0 r\u00e9soudre en conception qu'en impl\u00e9mentation ou apr\u00e8s. Cette phase repr\u00e9sente de 10 \u00e0 15\u00a0% du temps de d\u00e9veloppement.</p>"},{"location":"approche/#3-implementation","title":"3. Impl\u00e9mentation","text":"<p>Il s'agit de la r\u00e9alisation du syst\u00e8me conform\u00e9ment \u00e0 la conception \u00e9tablie. En cas de disparit\u00e9, il est important de revenir sur la conception (et possiblement l'analyse des besoins) pour assurer une tra\u00e7abilit\u00e9 compl\u00e8te entre les diff\u00e9rents documents qui d\u00e9crivent le syst\u00e8me. Cette phase repr\u00e9sente de 15 \u00e0 20\u00a0% du temps de d\u00e9veloppement.</p>"},{"location":"approche/#4-verification-et-validation","title":"4. V\u00e9rification et validation","text":"<p>R\u00e9alisation des op\u00e9rations centrales d'assurance qualit\u00e9, dont la v\u00e9rification (est-ce que le syst\u00e8me fonctionne correctement?) et la validation (est-ce que le syst\u00e8me fait la bonne chose?). Cette phase inclut non seulement le rep\u00e9rage des erreurs, mais aussi leur correctif. Tout comme dans les changements qui surviennent durant l'impl\u00e9mentation, il est important que les correctifs appliqu\u00e9s prennent en compte la tra\u00e7abilit\u00e9. Cette phase peut repr\u00e9senter entre 30\u00a0% et 50\u00a0% du temps de d\u00e9veloppement.</p>"},{"location":"approche/#5-maintenance-et-evolution","title":"5. Maintenance et \u00e9volution","text":"<p>Mise \u00e0 jour du syst\u00e8me selon l'\u00e9volution et la disponibilit\u00e9 des d\u00e9pendances, des enjeux de s\u00e9curit\u00e9 de l'information et besoins qui changent. Cette \u00e9tape peut inclure le r\u00e9usinage de parties de la base de code ainsi que la red\u00e9finition des besoins. Il peut s'agir d'une op\u00e9ration continue ou sporadique selon l'envergure et l'utilisation du syst\u00e8me. Comme c'est une phase qui s'\u00e9tend dans le temps jusqu'\u00e0 plusieurs ann\u00e9es apr\u00e8s le d\u00e9ploiement du syst\u00e8me, l'utilisation de la documentation \u00e9tablie (analyse, mod\u00e8les de conception et documentation technique) est cruciale pour parvenir \u00e0 effectuer les modifications \u00e0 moindre co\u00fbt et en limitant les effets de bord (ripple effect). Selon les syst\u00e8mes, cette phase peut s'\u00e9tendre pendant plus de 80\u00a0% de la dur\u00e9e de vie du syst\u00e8me.</p>"},{"location":"approche/#6-mort","title":"6. Mort","text":"<p>Bien que la maintenance et l'\u00e9volution d'un syst\u00e8me allongent consid\u00e9rablement la dur\u00e9e d'utilisation du syst\u00e8me o\u00f9 celui-ci demeure pertinent et de qualit\u00e9, in\u00e9vitablement le syst\u00e8me se d\u00e9grade soit parce qu'il ne r\u00e9pond plus au besoin, que la qualit\u00e9 du code est d\u00e9grad\u00e9e au point o\u00f9 le syst\u00e8me est difficilement utilisable ou que des d\u00e9pendances majeures (biblioth\u00e8ques, langages, syst\u00e8mes d'exploitation) ne sont plus support\u00e9es ou elles-m\u00eames mises \u00e0 jour. Lorsqu'il n'est plus possible que le syst\u00e8me \u00e9volue pour s'adapter \u00e0 ces changements, le syst\u00e8me meurt et cesse d'\u00eatre mis \u00e0 jour, ce qui cause une cessation compl\u00e8te (ou du moins majeure) de son utilisation. Des bouts du syst\u00e8me peuvent \u00eatre r\u00e9utilis\u00e9s vers un syst\u00e8me nouveau (nouvelle version).</p> <p>D'un point de vue entrepreneurial, cette phase permet aussi le lancement d'un nouveau produit ce qui r\u00e9g\u00e9n\u00e8re une entr\u00e9e importante de revenus. Cependant, avec la stabilisation des technologies (moins de d\u00e9pr\u00e9ciation rapide des outils et des langages), plusieurs entreprises sont pass\u00e9es dans un mode de paiement par abonnement (on ne permet plus \u00e0 la personne utilisatrice de poss\u00e9der le syst\u00e8me, on lui \u00ab\u00a0loue\u00a0\u00bb) ce qui valorise le temps et les ressources investis dans l'\u00e9tape de maintenance et d'\u00e9volution. </p>"},{"location":"approche/#3-modeles-de-developpement-logiciel","title":"3 mod\u00e8les de d\u00e9veloppement logiciel","text":"<p>Les 6\u00a0phases du d\u00e9veloppement s'encha\u00eenent en pratique selon diff\u00e9rents mod\u00e8les. Chaque mod\u00e8le poss\u00e8de des forces et des faiblesses et le choix d'un mod\u00e8le doit s'appuyer sur des \u00e9l\u00e9ments observables tels que\u00a0:</p> <ul> <li>la pr\u00e9visibilit\u00e9 des besoins;</li> <li>les d\u00e9lais de d\u00e9veloppement;</li> <li>le mod\u00e8le de financement; et</li> <li>la complexit\u00e9 technique du syst\u00e8me.</li> </ul> <p>Infographie illustrant les mod\u00e8les</p> Mod\u00e8le R\u00e9alisation Modification Livraison Exemples de syst\u00e8me Cascade Chaque \u00e9tape est compl\u00e9t\u00e9e pour l'ensemble des fonctionnalit\u00e9s avant de passer \u00e0 la suivante Pas de modification Livraison unique Syst\u00e8me d'avionique, appareil m\u00e9dical Incr\u00e9mental Quelques fonctionnalit\u00e9s sont s\u00e9lectionn\u00e9es et d\u00e9velopp\u00e9es enti\u00e8rement \u00e0 chaque it\u00e9ration Pas de modification Livraisons partielles avec des fonctionnalit\u00e9s compl\u00e8tes Outil comptable, outil de plans architecturaux It\u00e9ratif Quelques fonctionnalit\u00e9s sont s\u00e9lectionn\u00e9es et d\u00e9velopp\u00e9es \u00e0 chaque it\u00e9ration Possibilit\u00e9 de revenir sur les fonctionnalit\u00e9s d\u00e9velopp\u00e9es Livraisons partielles avec des fonctionnalit\u00e9s partielles M\u00e9dia social, outil de traitement de texte <p>On peut voir les approches pr\u00e9sent\u00e9es des plus strictes vers les plus flexibles (celles avec la plus grande adaptabilit\u00e9).</p>"},{"location":"approche/#le-manifeste-agile","title":"Le Manifeste Agile","text":"<p>Les approches agiles d\u00e9signent une philosophie de gestion de projet. Il n'existe pas une approche agile, mais plut\u00f4t des approches qui s'appuient sur la philosophie agile. Le document qui pr\u00e9sente la philosophie se nomme \u00abAgile Manisfeto\u00bb (Beck, 2001). Il pr\u00e9sente les 4\u00a0\u00e9nonc\u00e9s et les 12\u00a0principes de l'Agile.</p> <p>Les approches agiles se distinguent des approches classiques par l'accent qu'elles mettent sur le r\u00e9sultat et la flexibilit\u00e9.</p> <p>Lire le Agile Manifesto </p>"},{"location":"approche/#traduction-du-manifeste-agile","title":"Traduction du manifeste agile","text":"<p>Les individus et les interactions plut\u00f4t que les processus et les outils  Syst\u00e8me fonctionnel plut\u00f4t que documentation exhaustive  Collaboration de l'entit\u00e9 cliente plut\u00f4t que n\u00e9gociation contractuelle  S'adapter aux changements plut\u00f4t que suivre un plan   Les \u00e9l\u00e9ments de droite ont de la valeur, ceux de gauche sont prioris\u00e9s.</p>"},{"location":"approche/#les-12-principes-agiles","title":"Les 12\u00a0principes agiles","text":"<ol> <li>La priorit\u00e9 est de satisfaire l'entit\u00e9e cliente avec des livraisons rapides et r\u00e9guli\u00e8res de syst\u00e8me utilisable.</li> <li>Accueillez les changements dans les besoins, et ce, m\u00eame tard dans le d\u00e9veloppement. Les processus agiles utilisent le changement pour assurer l'avantage comp\u00e9titif de l'entit\u00e9 cliente.</li> <li>Livrez le syst\u00e8me fr\u00e9quemment, avec des intervalles de quelques semaines \u00e0 quelques moins. Pr\u00e9f\u00e9rez les planifications plus courtes.</li> <li>Les experts du domaine et les programmeurs doivent collaborer sur une base quotidienne pour l'avancement du projet.</li> <li>Les projets se construisent autour de gens motiv\u00e9s. Accordez-leur l'environnement et le support dont ils ont besoin et faites leur confiance pour accomplir le travail.</li> <li>La fa\u00e7on la plus efficace et efficiente de transmettre de l'information dans une \u00e9quipe de d\u00e9veloppement est la conversation face \u00e0 face.</li> <li>La mesure de succ\u00e8s la plus importante est un syst\u00e8me fonctionnel.</li> <li>Les processus agiles promeuvent le d\u00e9veloppement \u00e0 un rythme soutenable. Tous devraient pouvoir travailler ind\u00e9finiment sur le projet.</li> <li>Un souci continu de la qualit\u00e9 technique et de bonne conception augmente l'agilit\u00e9.</li> <li>Simplicit\u00e9 - l'art de maximiser le travail non fait - est essentiel.</li> <li>Les meilleures architectures, analyses de besoins et conceptions proviennent d'\u00e9quipes auto-organis\u00e9es.</li> <li>\u00c0 intervalle r\u00e9gulier, l'\u00e9quipe se questionne sur ses fa\u00e7ons de faire, propose des moyens d'\u00eatre plus efficace et s'ajuste.</li> </ol>"},{"location":"approche/#le-agile-en-pratique","title":"Le Agile en pratique","text":""},{"location":"approche/#references","title":"R\u00e9f\u00e9rences","text":"<p>Beck, K., et al. (2001) The Agile Manifesto. Agile Alliance. http://agilemanifesto.org/</p> <p>Sommerville, I. (2019). History of software engineering. Software Engineering 10th edition. https://software-engineering-book.com/web/history/ </p>"},{"location":"genie_logiciel/","title":"Histoire du g\u00e9nie logiciel et de l'informatique","text":"<p> Objectifs de la section</p> <p>Culture g\u00e9n\u00e9rale du domaine de l'informatique</p> <p> Temps requis</p> <p>30 minutes</p> <p>Depuis l'antiquit\u00e9 l'\u00eatre humain cherche \u00e0 d\u00e9velopper des outils pour les aider \u00e0 calculer. Les Grecs ont d\u00e9velopp\u00e9, au deuxi\u00e8me si\u00e8cle av. J.-C., un m\u00e9canisme permettant de calculer les \u00e9clipses plusieurs ann\u00e9es d'avance appel\u00e9 machine d'Anticyth\u00e8re (Wikimedia, 2023). </p> Machine d'Anticyth\u00e8re <p>Il fallut attendre l'industrialisation (d\u00e9but du XIXe si\u00e8cle) pour que l'informatique connaisse une grande avanc\u00e9e par l'introduction des cartes poin\u00e7onn\u00e9es dans les m\u00e9tiers \u00e0 tisser (machine de Jacquard). Ces cartes permettaient au m\u00e9tier de tisser des motifs complexes.</p> <p>La formalisation th\u00e9orique de l'informatique telle qu'on la conna\u00eet commen\u00e7a au milieu du XIXe si\u00e8cle avec les travaux du math\u00e9maticien anglais George Boole. Au d\u00e9but du XXe si\u00e8cle, l'alg\u00e8bre propos\u00e9e par Boole fut appel\u00e9e alg\u00e8bre bool\u00e9enne. Au d\u00e9but du XXe si\u00e8cle, John von Neumann, un math\u00e9maticien am\u00e9ricano-hongrois proposa le mod\u00e8le de machine de von Neumann (mod\u00e8le th\u00e9orique) qui servit de base \u00e0 la conception des premiers ordinateurs. Nos ordinateurs modernes sont toujours bas\u00e9s sur ces mod\u00e8les. von Neumann s'int\u00e9ressa aussi \u00e0 la th\u00e9orie des automates, un mod\u00e8le th\u00e9orique pour l'analyse de complexit\u00e9 de probl\u00e8me et un incontournable en intelligence artificielle.</p> <p>Durant la Seconde Guerre mondiale, Alan Turing construisit la premi\u00e8re machine utilisant l'\u00e9lectricit\u00e9 pour effectuer des calculs avec un dispositif d'entr\u00e9e et de sortie. Alan Turing continua sa carri\u00e8re apr\u00e8s la guerre en s'int\u00e9ressant \u00e0 l'intelligence artificielle et proposa le c\u00e9l\u00e8bre Test de Turing toujours d'actualit\u00e9 dans le domaine de l'intelligence artificielle.</p> <ul> <li> <p>George Boole </p> <p> </p> </li> <li> <p>John von Neumann</p> <p> </p> </li> <li> <p>Alan Turing</p> <p> </p> </li> </ul> <p>Les ann\u00e9es cinquante et soixante furent caract\u00e9ris\u00e9es par le d\u00e9veloppement de la programmation scientifique. D'abord tr\u00e8s orient\u00e9s pour assister la r\u00e9solution de probl\u00e8mes math\u00e9matiques et physiques, les programmes furent ensuite \u00e9largis pour r\u00e9soudre des probl\u00e8mes d'administration et de g\u00e9nie industriel. \u00c0 l'\u00e9poque, le cursus d'informatique n'existait pas. Programmer \u00e9tait une comp\u00e9tence que des professionnels d'autres domaines (math\u00e9maticien, administrateur, ing\u00e9nieur...) apprenaient pour les assister dans leur r\u00e9solution de probl\u00e8me.</p> <p>En 1968 et 1969, lors de rencontre de l'OTAN, le comit\u00e9 identifia une crise des logiciels. La taille et complexit\u00e9 croissante des logiciels les rendaient presque impossibles \u00e0 d\u00e9velopper. C'est alors que prit naissance dans les ann\u00e9es qui suivirent le g\u00e9nie logiciel. </p> <p>Le g\u00e9nie logiciel regroupe l'ensemble des techniques formelles visant \u00e0 permettre le d\u00e9veloppement d'application et \u00e9tudie les m\u00e9thodes de programmation (et plus tard les m\u00e9thodes de gestion de projet) favorisant le d\u00e9veloppement des logiciels. Des id\u00e9es comme la programmation-objet et les exceptions sont directement issues des r\u00e9flexions des ann\u00e9es 60 face \u00e0 la difficult\u00e9 de d\u00e9veloppement grandissante des logiciels.</p> <ul> <li> <p>Margaret Hamilton</p> <p>Superviseure QA du projet Apollo et pioni\u00e8re du g\u00e9nie logiciel  </p> </li> </ul> <p>Les ann\u00e9es 70 et 80 furent marqu\u00e9es par la d\u00e9mocratisation des langages-objets, la multiplication de langages de haut niveau et divers essais de m\u00e9thodes de gestion de projet. Ce fut aussi le d\u00e9but des cursus en informatique (originalement d\u00e9riv\u00e9 de celui de math\u00e9matique et qui \u00e9volu\u00e8rent vers ceux de g\u00e9nie). \u00c0 partir des ann\u00e9es 90, on retrouve de plus en plus d'\u00e9tudes empiriques sur les m\u00e9thodes de d\u00e9veloppement et les bonnes pratiques (encore enseign\u00e9es et utilis\u00e9es aujourd'hui). Parmi ces pratiques, on trouve les patrons de conception (design patterns), les architectures logicielles, les notations formelles (UML 1.0 et ses anc\u00eatres), l'utilisation de la composition plut\u00f4t que l'h\u00e9ritage...</p> <p>Les ann\u00e9es 2000 pour leur part virent peu de changement dans les langages et m\u00e9thodes de programmation, mais beaucoup dans la gestion de projet, avec entre autres la sortie du Agile manifesto en 2001. Les \u00e9l\u00e9ments mat\u00e9riels se d\u00e9veloppaient rapidement avec la loi de Moore et plusieurs id\u00e9es \u00e9taient explor\u00e9es sans \u00eatre concluantes. Pour plusieurs entreprise, cette d\u00e9cennie vue aussi l'int\u00e9gration de l'informatique dans les pratiques.</p> <p>La d\u00e9cennie de 2010 \u00e0 aujourd'hui vit se d\u00e9velopper un int\u00e9r\u00eat tr\u00e8s marqu\u00e9 pour l'intelligence artificielle, en particulier l'apprentissage automatique. Cela entra\u00eena un retour de la programmation en script (g\u00e9n\u00e9ralement plus court qu'un syst\u00e8me objet) et attira beaucoup d'attention des chercheurs d'une pluralit\u00e9 de domaines. La d\u00e9mocratisation des plateformes alternatives (web et mobile) poussa aussi la recherche dans la direction de l'int\u00e9gration multiplateforme et la cohabitation de plusieurs langages de programmation dans un m\u00eame syst\u00e8me et le d\u00e9veloppement de langages utilisables dans des environnements vari\u00e9s. </p>"},{"location":"genie_logiciel/#references","title":"R\u00e9f\u00e9rences","text":"<p>LANL. (2008). John Von Neumann. http://www.lanl.gov/history/atomicbomb/images/NeumannL.GIF</p> <p>Unless otherwise indicated, this information has been authored by an employee or employees of the Los Alamos National Security, LLC (LANS), operator of the Los Alamos National Laboratory under Contract No. DE-AC52-06NA25396 with the U.S. Department of Energy. The U.S. Government has rights to use, reproduce, and distribute this information. The public may copy and use this information without charge, provided that this Notice and any statement of authorship are reproduced on all copies. Neither the Government nor LANS makes any warranty, express or implied, or assumes any liability or responsibility for the use of this information.</p> <p>Sommerville, I. (2019). History of software engineering. Software Engineering 10th edition. https://software-engineering-book.com/web/history/ </p> <p>Wikimedia Foundation. (8 ao\u00fbt 2023). Antikythera mechanism. Wikipedia. https://en.wikipedia.org/wiki/Antikythera_mechanism</p>"},{"location":"redaction/","title":"\u00c9l\u00e9ments de r\u00e9daction technique","text":"<p> Objectifs de la section</p> <p>4-4 Compr\u00e9hension des points importants du dossier de conception 4-5 Application des r\u00e8gles de mise en page pour la production de rapports conformes 4-6 Structure d'un document de conception</p> <p> Temps requis</p> <p>30 minutes</p>"},{"location":"redaction/#style-de-redaction","title":"Style de r\u00e9daction","text":"<p>Ah! non! c\u2019est un peu court, jeune homme! On pouvait dire\u2026 Oh! Dieu! \u2026 bien des choses en somme\u2026 En variant le ton, \u2013 par exemple, tenez : Agressif : \u00abMoi, monsieur, si j\u2019avais un tel nez, Il faudrait sur-le-champ que je me l\u2019amputasse!\u00bb Amical : \u00abMais il doit tremper dans votre tasse Pour boire, faites-vous fabriquer un hanap!\u00bb Descriptif : \u00abC\u2019est un roc! \u2026 c\u2019est un pic! \u2026 c\u2019est un cap! Que dis-je, c\u2019est un cap? \u2026 C\u2019est une p\u00e9ninsule!\u00bb</p>"},{"location":"redaction/#style-de-redaction_1","title":"Style de r\u00e9daction","text":"<p>Comment \u00e9crire un document technique?</p> <p>Quels trucs utiliser?</p>"},{"location":"redaction/#style-de-redaction_2","title":"Style de r\u00e9daction","text":"<ol> <li>\u00c9viter les phrases longues. Scinder en plus petites phrases am\u00e9liore la lisibilit\u00e9.</li> <li>Utiliser des pronoms \u00abimpersonnels\u00bb : nous, le syst\u00e8me, le client... R\u00e9f\u00e9rez la fonction de la personne au besoin.</li> <li>Utiliser des mots pr\u00e9cis, introduire des acronymes au besoin.</li> <li>\u00catre consistent dans les termes (un chat reste un chat).</li> <li>Pas de figure de style, on veut rester sur le sujet.</li> <li>Faire une liste de termes et de leur d\u00e9finition.</li> <li>Utiliser des listes et des tableaux de fa\u00e7on pertinente.</li> <li>\u00c9viter les opinions</li> </ol>"},{"location":"redaction/#style-de-redaction_3","title":"Style de r\u00e9daction","text":""},{"location":"redaction/#la-liste","title":"La liste","text":"<ul> <li>Organise logiquement et s\u00e9quentiellement plusieurs \u00e9l\u00e9ments qui partagent une fonction commune (sous-\u00e9l\u00e9ment d'un tout, \u00e9tapes d'un processus...)</li> <li>Peut \u00eatre ordonn\u00e9 ou non. Si l'ordre n'a pas d'importance et que l'on n'a pas besoin de r\u00e9f\u00e9rencer les \u00e9l\u00e9ments, on choisit la liste non ordonn\u00e9e.</li> </ul>"},{"location":"redaction/#style-de-redaction_4","title":"Style de r\u00e9daction","text":""},{"location":"redaction/#le-tableau","title":"Le tableau","text":"<ul> <li>Met en relation 2 variables (facteurs) ou plus. </li> <li>Tr\u00e8s utile pour les donn\u00e9es num\u00e9riques</li> <li>Tr\u00e8s peu utile pour les donn\u00e9es textuelles</li> <li>A\u00e9rer les tableaux pour augmenter la lisibilit\u00e9</li> <li>On ne fait jamais de tableau \u00e0 1 ligne ou 1 colonne</li> </ul>"},{"location":"redaction/#exercice-de-reformulation","title":"Exercice de reformulation","text":"<p>Reformulez l'extrait suivant pour qu'il adopte un style de r\u00e9daction technique.</p> <p>Depuis la nuit des temps, les humains ont besoin de communiquer. L'application MyChat que je d\u00e9velopperai permettra aux utilisateurs de s'\u00e9crire des messages textes, de s'envoyer des photos, des vid\u00e9os, des GIF de chats, des emojis vari\u00e9s de multiples couleurs et les utilisateurs peuvent \u00e9galement exprimer leur r\u00e9action aux contenus re\u00e7us et bannir des utilisateurs. Marc de MyChat m'a aussi pr\u00e9cis\u00e9 que je dois inclure des publicit\u00e9s dans le logiciel. Il a \u00e9t\u00e9 tr\u00e8s chaleureux dans son accueil.</p>"}]}