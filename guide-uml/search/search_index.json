{"config":{"lang":["fr"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to MkDocs","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"bases-donnees/","title":"Bases de donn\u00e9es","text":"<p>Les syst\u00e8mes de bases de donn\u00e9es relationnelles sont de larges syst\u00e8mes permettant de structurer l\u2019information \u00e0 stocker et de la manipuler. Afin d\u2019assurer une gestion optimale de l\u2019information, cette derni\u00e8re est divis\u00e9e en entit\u00e9s, puis entrepos\u00e9e dans des structures pr\u00e9cises et soumises \u00e0 des contraintes d\u2019int\u00e9grit\u00e9. Dans la conception de bases de donn\u00e9es, la composition de chaque structure de donn\u00e9es est pr\u00e9cis\u00e9e. Afin de mod\u00e9liser les bases de donn\u00e9es, deux types de diagrammes sont utilis\u00e9s :</p> <ol> <li>Diagramme de classes (DC) : mod\u00e9lise les classes conceptuelles trouv\u00e9es lors de l\u2019analyse.</li> <li>Diagramme entit\u00e9s-relations (DER) : repr\u00e9sente l\u2019impl\u00e9mentation de la base de donn\u00e9es dans un langage propre aux bases de donn\u00e9es.</li> </ol>"},{"location":"dc-banque/","title":"Banque de d\u00e9pannage - DC","text":"<p>Est-ce que que ma donn\u00e9e est un attribut d\u2019une classe ou une classe \u00e0 part enti\u00e8re ?</p> <p>Il arrive parfois qu\u2019on se demande si une valeur est un attribut ou une classe \u00e0 part enti\u00e8re. Trois questions sont \u00e0 se poser pour prendre la bonne d\u00e9cision :</p> <ol> <li>Si j\u2019utilise une classe pour g\u00e9rer cette donn\u00e9e, est-ce qu\u2019elle contiendrait qu\u2019un seul attribut ? Si c\u2019est le cas, alors la donn\u00e9e est fort probablement un attribut. Il peut arriver que dans le passage dans les formes normales on r\u00e9alise une table qui contienne seulement une colonne et sa cl\u00e9 primaire, mais il faut \u00e9viter d\u2019essayer de prendre de l\u2019avance dans le raisonnement.</li> <li>Si j\u2019utilise un attribut pour g\u00e9rer cette donn\u00e9e, est-ce qu\u2019il contiendrait plusieurs valeurs ? Prenons l\u2019exemple d\u2019une adresse : \u00ab 123 rue Notre-Dame \u00bb. Valider que l\u2019adresse est bonne demande beaucoup de travail, car le champ contient 3 donn\u00e9es : le num\u00e9ro civique (123), le type d\u2019infrastructure routi\u00e8re (rue) et le nom de la rue (Notre-Dame). C\u2019est un cas o\u00f9 l\u2019on souhaiterait s\u00e9parer en trois champs une m\u00eame donn\u00e9e.</li> <li>Est-ce que la donn\u00e9e est en relation avec d\u2019autres ? Par exemple, un blog qui offre plusieurs articles et chaque article est accompagn\u00e9 d\u2019une \u00e9tiquette. La classe \u00ab \u00c9tiquette \u00bb poss\u00e8de un seul attribut : le nom de l\u2019\u00e9tiquette. Cependant, tous les articles pointent vers la m\u00eame \u00e9tiquette. Dans ce cas, faire une classe pour g\u00e9rer une donn\u00e9e est appropri\u00e9.</li> </ol> <p>Est-ce que je dois trouver toutes les superclasses (h\u00e9ritages) possibles ?</p> <p>D\u00e9finitivement pas ! Il existe un danger qui s\u2019appelle la surconception o\u00f9 trop de d\u00e9tails sont g\u00e9r\u00e9s \u00e0 l\u2019\u00e9tape de l\u2019analyse ou la conception. Cela cr\u00e9e des difficult\u00e9s plus tard dans l\u2019impl\u00e9mentation et allourdit grandement le processus d'analyse sans gain r\u00e9el. Les relations importantes doivent \u00eatre identifi\u00e9es, mais la s\u00e9mantique { title=\"terme qui appara\u00eet sur une fl\u00e8che\" } de la relation est plus importante que la nature de la fl\u00e8che elle-m\u00eame.</p>"},{"location":"dc-exemple/","title":"Exemple complet d'application du DC","text":""},{"location":"dc-exemple/#le-pret-dembarcations","title":"Le pr\u00eat d\u2019embarcations","text":"<p>Mise en situation </p> <p>Une entreprise de vill\u00e9giature pr\u00eate des embarcations \u00e0 des vacanciers. Chaque embarcation poss\u00e8de un nom, un num\u00e9ro s\u00e9quentiel, une occupation minimale et une occupation maximale. Avec les embarcations, des vestes de flottaison individuelles (qui poss\u00e8dent une taille et une date d\u2019expiration) et des pagaies (du type concordant avec l\u2019embarcation) sont lou\u00e9es. Chaque produit lou\u00e9 poss\u00e8de un co\u00fbt de location horaire. </p> <p>Les vacanciers doivent s\u2019enregistrer en laissant leur nom, leur adresse et un num\u00e9ro de t\u00e9l\u00e9phone. Le syst\u00e8me enregistre la date de prise de possession, de retour pr\u00e9vu et de retour r\u00e9el d\u2019une embarcation. Il n\u2019est pas possible de louer des pagaies ou des vestes de flottaison sans louer une embarcation.</p> <p>L\u2019analyse de cette situation est repr\u00e9sent\u00e9e sur le DC ci-dessous.</p> Mod\u00e9lisation de la base de donn\u00e9es du syst\u00e8me de locations d'embarcations <p>On remarque les \u00e9l\u00e9ments suivants sur le diagramme :</p> <ol> <li>Il y a r\u00e9p\u00e9tition de l\u2019attribut coutHoraire dans les classes VesteFlotaison, Embarcation et Pagaie. C\u2019est correct de ne pas extraire ces donn\u00e9es imm\u00e9diatement, lors du passage des formes normales les donn\u00e9es communes seront isol\u00e9es.</li> <li>La location est centrale et aucune donn\u00e9e qui lui est li\u00e9e n\u2019 est repr\u00e9sent\u00e9e par des attributs. C\u2019est correct de repr\u00e9senter la situation ainsi, car lors de l\u2019analyse des multiplicit\u00e9s, le choix des cl\u00e9s \u00e9trang\u00e8res sera fait et les attributs ou les tables d\u2019association seront cr\u00e9\u00e9s \u00e0 ce moment.</li> <li>La contrainte unique du num\u00e9ro s\u00e9quentielle permet de distinguer les embarcations. La distinction n\u2019est pas demand\u00e9e pour les vestes de flottaison et les pagaies.</li> <li>La contrainte qu\u2019une location doit absolument contenir une embarcation est repr\u00e9sent\u00e9e dans la multiplicit\u00e9 de 1..n entre Location et Embarcation.</li> <li>Le fait qu\u2019une embarcation requiert un type particulier de pagaie est not\u00e9 par la relation \u00ab\u00a0requis par\u00a0\u00bb.</li> <li>\u00c0 cette \u00e9tape, aucun champ n\u2019a \u00e9t\u00e9 marqu\u00e9 comme {id}, car toutes les tables n\u2019ont pas encore \u00e9t\u00e9 identifi\u00e9es. Marquer les cl\u00e9s primaires arrive \u00e0 l'\u00e9tape suivante,  la conception.</li> </ol> <p>Bonnes pratiques</p> <p>Il aurait \u00e9t\u00e9 possible et valide de pr\u00e9senter un plus haut niveau de d\u00e9tails dans la premi\u00e8re analyse. Avec l\u2019exp\u00e9rience, il devient possible d\u2019anticiper quelques \u00e9tapes et d\u00e9cisions futures. Par contre, en commen\u00e7ant il est pr\u00e9f\u00e9rable d\u2019\u00eatre moins efficace, mais plus pr\u00e9cis en dupliquant l\u2019information \u00e0 l\u2019occasion (comme avec l\u2019attribut coutHoraire) plut\u00f4t que de chercher \u00e0 gagner du temps et prendre de mauvaises d\u00e9cisions.</p>"},{"location":"dc-norme/","title":"Normes du diagramme de classes","text":"<p>\u00c9tape de la conception</p> <p> Analyse</p> <p>Standard de notation</p> <p>UML 2.5</p> <p>Nom anglais</p> <p>Class diagram<sup>1</sup></p> <p>On utilise un mod\u00e8le objet pour repr\u00e9senter les entit\u00e9s qui constitueront la base de donn\u00e9es. Ce mod\u00e8le, souvent employ\u00e9 lors de la phase d\u2019analyse, permet de synth\u00e9tiser l\u2019information d\u2019un \u00e9nonc\u00e9 de besoins en un diagramme sans se pr\u00e9occuper des sp\u00e9cificit\u00e9s li\u00e9es \u00e0 l\u2019impl\u00e9mentation d\u2019une base de donn\u00e9es. Ces sp\u00e9cificit\u00e9s sont trait\u00e9es dans la phase subs\u00e9quente de conception o\u00f9 le mod\u00e8le objet est transform\u00e9 en diagramme d\u2019entit\u00e9s-relations. Une autre utilisation du diagramme de classe est dans l\u2019\u00e9laboration d\u2019un syst\u00e8me objet. Cette utilisation est souvent pr\u00e9sent\u00e9e dans les cours de mod\u00e9lisation de niveau universitaire et sera, par cons\u00e9quent, mise de c\u00f4t\u00e9 dans ce guide.</p>"},{"location":"dc-norme/#definition-des-types-de-donnees","title":"D\u00e9finition des types de donn\u00e9es","text":"<p>Les types de donn\u00e9es dans un diagramme de classes sont repr\u00e9sent\u00e9s par une bo\u00eete s\u00e9par\u00e9e en deux sections. La section du haut contient le nom de la classe en gras, puis la section du bas les attributs de la classe. Un attribut est simplement d\u00e9clar\u00e9 avec son nom suivi du symbole deux points ( : ) puis de son type. Si l\u2019attribut poss\u00e8de une valeur par d\u00e9faut, celle-ci est indiqu\u00e9e apr\u00e8s la pr\u00e9sence du symbole d\u2019\u00e9galit\u00e9 ( = ).</p> <p>Les classes \u00e0 cette \u00e9tape repr\u00e9sentent une partie des tables de la base de donn\u00e9es. L\u2019application des formes normales et la normalisation des relations (en particulier les relations N \u00e0 M) entra\u00eeneront l\u2019apparition de nouvelles tables et la r\u00e9\u00e9criture de certains attributs.</p> Repr\u00e9sentation d\u2019une classe dans un diagramme de classe"},{"location":"dc-norme/#gestion-des-relations","title":"Gestion des relations","text":"<p>On retrouve principalement deux types de relations dans un diagramme de classes, les relations d\u2019h\u00e9ritage et les relations d\u2019utilisation. Les relations d\u2019h\u00e9ritage entre deux types sont repr\u00e9sent\u00e9es par une fl\u00e8che dont la t\u00eate est vide et qui pointe du type enfant vers le type parent.</p> <p>La relation d\u2019utilisation est repr\u00e9sent\u00e9e par un trait plein sur lequel appara\u00eet le nom de la relation. Il s\u2019agit habituellement d\u2019un verbe conjugu\u00e9. Si le sens de l\u2019application de la relation n\u2019est pas clair, un triangle (ou un chevron) peut \u00eatre plac\u00e9 \u00e0 c\u00f4t\u00e9 du nom de la relation pour indiquer dans quel sens elle doit \u00eatre lue. </p> Relation entre deux classes Relation d'h\u00e9ritage entre deux classes Relation avec l'indication d'une cardinalit\u00e9 entre deux classes <p>Types de fl\u00e8ches</p> <p>On peut utiliser tous les types de fl\u00e8ches pr\u00e9sent\u00e9s dans la section sur le diagramme de classe de conception. Par contre, comme le diagramme sera r\u00e9\u00e9crit en diagramme d\u2019entit\u00e9s-relations dans l\u2019\u00e9tape de conception de la base de donn\u00e9es. On utilise g\u00e9n\u00e9ralement que les deux types de fl\u00e8ches pr\u00e9sent\u00e9s ci-dessus afin de se concentrer sur le lien entre les donn\u00e9es que sur l\u2019utilisation de la bonne cat\u00e9gorie de relation.</p>"},{"location":"dc-norme/#gestion-des-contraintes","title":"Gestion des contraintes","text":"<p>Un \u00e9l\u00e9ment important \u00e0 tenir compte dans la mod\u00e9lisation d\u2019une base de donn\u00e9es est la pr\u00e9sence de contraintes sur les \u00e9l\u00e9ments, en particulier les attributs. Pour repr\u00e9senter de telles contraintes, on les inscrit \u00e0 c\u00f4t\u00e9 de l\u2019attribut entre accolades ( { } ). Les contraintes peuvent prendre la forme d\u2019une indication compl\u00e9mentaire ou d\u2019une valeur bool\u00e9enne qui doit \u00eatre respect\u00e9e. Le tableau ci-dessous d\u00e9taille les principaux types de contraintes.\u00b8</p> Contrainte Nom de la contrainte Description id identifiant unique la valeur sera non nulle et diff\u00e9rente pour chaque instance. unique valeur unique la valeur sera diff\u00e9rente pour chaque instance. La valeur nulle peut \u00eatre r\u00e9p\u00e9t\u00e9e. not null valeur non nulle la valeur doit non nulle pour chaque instance. x [&gt; | &gt;= | &lt;= | &lt; | &lt;&gt;] y valeur restreinte l\u2019attribut x doit respect\u00e9e une contrainte selon y. Repr\u00e9sentation de contraintes sur des attributs <p>En analyse de syst\u00e8me objet</p> <p>On peut aussi utiliser le mod\u00e8le objet pour la mod\u00e9lisation de la couche m\u00e9tier du syst\u00e8me. Ce mod\u00e8le permet une premi\u00e8re repr\u00e9sentation des objets utilis\u00e9s dans le syst\u00e8me, sans se pr\u00e9occuper de l\u2019impl\u00e9mentation. Un diagramme objet utilis\u00e9 dans ces circonstances est appel\u00e9 mod\u00e8le du domaine.</p> <p>Pour en savoir plus : </p> <ol> <li> <p>Le terme anglais Class diagram fait parfois r\u00e9f\u00e9rence au diagramme de classes de conception. Le mod\u00e8le objet se diff\u00e9rencie du diagramme de classe de conception par l\u2019absence d\u2019op\u00e9ration et l\u2019absence de blocs dans la structure de classe.\u00a0\u21a9</p> </li> </ol>"}]}