{"config":{"lang":["fr"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Jeux 3D","text":""},{"location":"camera/","title":"Les types de cam\u00e9ras","text":"<p> Contenus de la page</p> <p>1-3 Types de cam\u00e9ra</p> <p> Temps requis</p> <p>10 minutes</p> <p>Les cam\u00e9ras d\u00e9terminent comme la personne joueuse voit le monde. Le type de cam\u00e9ra en dit long sur le point de vue \u00e0 adopter, les contr\u00f4les disponibles et l'ambiance du jeu. Une cam\u00e9ra avec un large champ permet de voir beaucoup d'\u00e9l\u00e9ments et donc oriente l'attention vers le monde et sa composition. Une cam\u00e9ra restreinte au contraire concentre l'action dans l'imm\u00e9diat du personnage et peut contribuer \u00e0 cr\u00e9er un univers incertain avec de grandes zones d'ombres. De m\u00eame, une cam\u00e9ra libre offre un grand degr\u00e9 d'exploration sans risque alors qu'une cam\u00e9ra qui suit le personnage force le d\u00e9placement et la prise de risque pour explorer.</p>"},{"location":"camera/#les-projections","title":"Les projections","text":"<p>On appelle projection le calcul fait pour afficher une sc\u00e8ne en 3D sur un support en 2D (moniteur). Ce calcul entra\u00eene une perte d'information (\u00e9limination d'une dimension). On triche en donnant l'aspect de profondeur au joueur, mais cela complexifie le calcul d'\u00e9l\u00e9ment d'entr\u00e9e (comme le fait de cliquer sur un \u00e9l\u00e9ment dans le monde).</p> <p></p> <p>La projection en perspective est semblable \u00e0 celle que nos yeux voient. Les objets semblent plus petits au fur et \u00e0 mesure que l'on s'\u00e9loigne du point d'observation. L'utilisation de ce type de projection conf\u00e8re un aspect r\u00e9aliste au jeu. Elle est tr\u00e8s utilis\u00e9e pour les jeux \u00e0 la premi\u00e8re personne.</p> <p>La projection isom\u00e9trique n'a pas d'effet sur la profondeur, toutes les dimensions restent constantes. L'utilisation de ce type de cam\u00e9ra permet d'afficher des zones sans perte d'information (comme on regarderait une carte). L'utilisation de ce type de projection d\u00e9tache la personne joueuse du jeu et permet d'observer de grandes surfaces. Elle est tr\u00e8s utilis\u00e9e pour les jeux de gestion et de strat\u00e9gie.</p>"},{"location":"camera/#positionnement-de-la-camera","title":"Positionnement de la cam\u00e9ra","text":"<p>La cam\u00e9ra peut prendre plusieurs positions relatives au personnage du jeu :</p> <p>En premi\u00e8re personne, la cam\u00e9ra donne l'impression de regarder par les yeux du personnage. C'est l'un des \u00e9l\u00e9ments immersifs les plus importants si l'on veut que la personne joueuse s'identifie au personnage.</p> <p>En troisi\u00e8me personne, la cam\u00e9ra suit le personnage, mais permet aussi d'observer l'environnement avoisinant. Cela aide \u00e0 la recherche de trajet ou d'objets du jeu. On la retrouve souvent dans les RPG, MMORPG et jeux de plateforme.</p> <p>La cam\u00e9ra libre ou cam\u00e9ra dieu n'est pas li\u00e9 \u00e0 un personnage et permet de voir l'univers du jeu du point de vue souhait\u00e9 par la personne joueuse. Elle peut s'accompagner de quelques restrictions (zones visibles et zones masqu\u00e9es), mais des contr\u00f4les existent, ind\u00e9pendamment des personnages ou des objets du jeu, pour d\u00e9placer la cam\u00e9ra.</p>"},{"location":"camera/#exercice","title":"Exercice","text":"<p>Identifiez les types de cam\u00e9ras des images suivantes</p> <p></p> R\u00e9ponse <p>Perspective en premi\u00e8re personne </p> <p></p> R\u00e9ponse <p>Isom\u00e9trique en cam\u00e9ra libre </p> <p></p> R\u00e9ponse <p>Perspective en troisi\u00e8me personne </p> <p></p> R\u00e9ponse <p>Perspective en troisi\u00e8me personne </p> <p></p> R\u00e9ponse <p>Isom\u00e9trique en cam\u00e9ra libre </p> <p></p> R\u00e9ponse <p>Perspective en premi\u00e8re personne </p>"},{"location":"classification/","title":"Classifications des jeux","text":"<p> Contenus de la page</p> <p>1-5 Types de jeu et leurs caract\u00e9ristiques</p> <p> Temps requis</p> <p>10 minutes</p> <p>On peut classifier les jeux selon plusieurs crit\u00e8res, dont la plateforme d'ex\u00e9cution, les contr\u00f4les utilis\u00e9s et le genre du jeu. Toutefois, la classification des jeux par genre est tr\u00e8s subjective, car elle d\u00e9pend principalement de la perception de la personne qui effectue la classification. Ce qui est important dans l'identification d'un genre est de faire ressortir une des caract\u00e9ristiques principales ancr\u00e9es dans une m\u00e9canique de jeu ou dans le contexte du jeu.</p>"},{"location":"classification/#classification-par-les-plateformes","title":"Classification par les plateformes","text":"<p>On peut diviser les jeux selon les plateformes sur lesquelles elles s'ex\u00e9cutent. De plus en plus, les fronti\u00e8res tendent \u00e0 tomber comme les jeux deviennent port\u00e9s sur des plateformes multiples.</p> Plateformes utilis\u00e9s en 2019"},{"location":"classification/#classification-par-les-controles","title":"Classification par les contr\u00f4les","text":"<p>Pour les contr\u00f4les, on retrouve principalement 5 types de contr\u00f4les. Certains jeux peuvent supporter plus d'un type de contr\u00f4le.</p> <ul> <li>Clavier et souris</li> <li>Manette (incluant les joysticks)</li> <li>Cam\u00e9ra (reconnaissance de mouvement)</li> <li>\u00c9cran tactile</li> <li>Contr\u00f4le personnalis\u00e9 (simulateur, arcade)</li> </ul>"},{"location":"classification/#classification-par-le-genre","title":"Classification par le genre","text":"<ul> <li> <p>FPS Jeu de tir subjectif </p> <p>First person shooter </p> <ul> <li>Joueur tr\u00e8s actif</li> <li>M\u00e9caniques de jeu orient\u00e9es autour des actions du personnage contr\u00f4l\u00e9</li> <li>Demande souvent une grande dext\u00e9rit\u00e9  </li> <li>Joueur seul ou multijoueur</li> <li>Souvent combin\u00e9 avec les genres : RPG, hack'n Slash ou aventure</li> </ul> <p>Franchises connues : Doom, Quake, Call of Duty, Battlefield, Counter-Strike, Minescraft, Portal, Skyrim, Subnautica</p> </li> <li> <p>RPG Jeu de r\u00f4le  </p> <p>Role playing game </p> <ul> <li>Univers immersifs, jeu men\u00e9 par l'histoire ou l'environnement</li> <li>M\u00e9caniques et options vari\u00e9es pour permettre au personnage \u00ab de se d\u00e9finir \u00bb lui-m\u00eame</li> <li>Joueur seul ou petit groupe de joueur</li> </ul> <p>Franchises connues :  The Elder Scrolls, The Witcher, Dark Souls, Fallout, Borderland, Baldur's Gate, Minecraft</p> </li> <li> <p>MMORPG Jeu de r\u00f4le en ligne massivement multijoueur </p> <p>Massively Multiplayer Online Role-Playing Game </p> <ul> <li>Semblable au RPG en termes de m\u00e9caniques de jeu</li> <li>Ajoute souvent un \u00e9l\u00e9ment collaboratif essentiel (ou grandement facilitant)</li> <li>Comme il est massivement multijoueur, les joueurs ne deviennent pas des h\u00e9ros incontest\u00e9s dans l'univers du jeu</li> <li>Int\u00e8gre souvent des m\u00e9caniques d'affrontements entre les joueurs, surtout \u00e0 haut niveau</li> </ul> <p>Franchises connues: - World of Warcraft, Eve Online, RuneScape, Star Wars The Old Republic</p> </li> <li> <p>RTS Jeu de strat\u00e9gie en temps r\u00e9el </p> <p>Real time strategy </p> <ul> <li>M\u00e9caniques ax\u00e9es sur les fa\u00e7ons d'utiliser les unit\u00e9s, l'environnement ou les objets du jeu</li> <li>Orient\u00e9 en joueur contre IA ou joueur contre joueur</li> <li>Int\u00e8gre une composante d'habilet\u00e9 importante en raison du temps r\u00e9el</li> <li>Plusieurs s'appuient sur le principe du 4X (Explore, Expand, Exploit, Exterminate)</li> </ul> <p>Franchises connues  : Age Of Empire, Empire Earth, Sins of a Solar Empire, Starcraft, Total War, They are billions, Anno 2205, Surviving Mars</p> </li> <li> <p>TBS Jeu de strat\u00e9gie en tour par tour </p> <p>Turn base strategy </p> <ul> <li>M\u00e9caniques ax\u00e9es sur les fa\u00e7ons d'utiliser les unit\u00e9s, l'environnement ou les objets du jeu</li> <li>Orient\u00e9 en joueur contre IA ou joueur contre joueur</li> <li>Int\u00e8gre \u00e9norm\u00e9ment de contenu en raison de la \u00ab\u00a0lenteur\u00a0\u00bb du jeu</li> <li>Plusieurs s'appuient sur le principe du 4X (Explore, Expand, Exploit, Exterminate)</li> </ul> <p>Franchises connues : Civilization, Imperialism, Total War </p> </li> <li> <p>Jeu de survie </p> <p>Survival game </p> <ul> <li>Jeu o\u00f9 le personnage doit collecter des ressources pour continuer \u00e0 jouer</li> <li>Le jeu propose un objectif clair ou il faut simplement rester en vie le plus longtemps possible</li> <li>Domin\u00e9 par les m\u00e9caniques de type joueur contre environnement</li> <li>\u00c0 difficult\u00e9 \u00e9lev\u00e9e, il faut g\u00e9n\u00e9ralement faire tout le jeu sans mourir</li> </ul> <p>Franchises connues : Minecraft, The Forest, Subnautica, Don't Starve, Project Zomboid</p> </li> <li> <p>CMS Gestion </p> <p>Construction and management simulation </p> <ul> <li>But de faire cro\u00eetre au maximum une entit\u00e9</li> <li>La croissance et le d\u00e9veloppement co\u00fbtent des ressources</li> <li>Il peut ne pas y avoir d'ennemi autre que le risque de banqueroute</li> <li>Parties possiblement tr\u00e8s longues, voire sans fin</li> </ul> <p>Franchises connues : Sims, SimCity, Anno, RollerCoaster Tycoon, Rimworld, Dwarf Forteress</p> </li> <li> <p>Simulation </p> <p>Simulation </p> <ul> <li>M\u00e9caniques qui visent \u00e0 reproduire le plus fid\u00e8lement possible une situation r\u00e9elle</li> <li>Peut avoir des applications industrielles</li> <li>Engouement avec la notion de clones num\u00e9riques et applications industrielles hors de l'industrie classique du jeu</li> </ul> <p>Franchises connues : Flight Simulator, Train Simulator, Lawn Mowing Simulator, Farming Simulator</p> </li> <li> <p>Puzzle </p> <p>Puzzle </p> <ul> <li>B\u00e2tit autour d'\u00e9nigmes \u00e0 r\u00e9soudre</li> <li>Parfois m\u00e9lang\u00e9 \u00e0 d'autres genres pour diversifier les m\u00e9caniques ou utilis\u00e9 comme genre secondaire pour enrichir un univers</li> <li>Repose sur l'habilet\u00e9 de r\u00e9flexion et d'observation de la personne qui joue plut\u00f4t que du personnage</li> </ul> <p>Franchises connues : Portal, Witcher 3, Turing Test, Legend of Zelda, Superliminal</p> </li> <li> <p>Sportif </p> <p>Sports </p> <ul> <li>M\u00e9caniques inspir\u00e9es d'un sport r\u00e9el avec un degr\u00e9 de r\u00e9alisme variable</li> <li>N\u00e9cessite souvent une grande habilet\u00e9 manuelle</li> </ul> <p>Franchises connues : \u00c9checs, Fifa, Need For Speed, NHL, Wii sport, Mario Kart </p> </li> <li> <p>Aventure </p> <p>Adventure </p> <ul> <li>M\u00e9caniques orient\u00e9es vers l'exploration et la r\u00e9alisation de courtes t\u00e2ches</li> <li>Options du personnage souvent limit\u00e9es afin de suivre un sc\u00e9nario impos\u00e9</li> <li>Souvent oppos\u00e9 au RPG par l'imposition d'une trame narrative</li> </ul> <p>Franchises connues : Legend of Zelda, Super Mario, Halo, Donkey Kong, Castlevania</p> </li> <li> <p>Jeu incr\u00e9mental </p> <p>Idle game </p> <ul> <li>M\u00e9caniques orient\u00e9es autour d'une croissance exponentielle</li> <li>Jeu tr\u00e8s populaire dans les plateformes mobiles</li> <li>Souvent, le temps hors jeu permet aussi de collecter des ressources pour avancer</li> </ul> <p>Franchises connues : Hustle Castle, Perfect Tower, Universal paperclips </p> </li> <li> <p>Tours de d\u00e9fense </p> <p>Tower defense</p> <ul> <li>Un objectif doit \u00eatre d\u00e9fendu de fa\u00e7on indirecte avec des \u00ab\u00a0tours\u00a0\u00bb qui retardent ou d\u00e9truisent les ennemis</li> <li>Jeu plut\u00f4t passif o\u00f9 la personne joueuse oriente seulement la disposition d'objets sur la carte</li> </ul> <p>Franchises connues : Kingdom rush, Plant vs Zombie, They Are Billions</p> </li> <li> <p>Arcade </p> <p>Arcade </p> <ul> <li>Jeu caract\u00e9ris\u00e9 par des parties courtes</li> <li>M\u00e9caniques et contr\u00f4les limit\u00e9s </li> <li>N\u00e9cessite une grande habilet\u00e9 manuelle</li> </ul> <p>Franchises connues : Donkey Kong (1981), Galaga, Invaders, Pac-Man, Tetris</p> </li> </ul>"},{"location":"classification/#references","title":"R\u00e9f\u00e9rences","text":"<p>Clarke, R. I., Lee, J. H., &amp; Clark, N. (2017). Why video game genres fail: A classificatory analysis. Games and Culture, 12(5), 445-465.</p> <p>List of video game genres. (2024, 19 juillet). Dans Wikipedia https://en.wikipedia.org/w/index.php?title=List_of_video_game_genres&amp;oldid=1235402589</p>"},{"location":"jeu-simulation/","title":"Que sont les simulations et les jeux","text":"<p> Contenus de la page</p> <p>1-5 Types de jeu et leurs caract\u00e9ristiques</p> <p> Temps requis</p> <p>20 minutes</p>"},{"location":"jeu-simulation/#les-simulations","title":"Les simulations","text":"<p>Selon Antitode , le terme simuler est \u00ab Imiter (un fonctionnement), reproduire de fa\u00e7on artificielle \u00bb. Donc le but d'une simulation informatique est de reproduire le fonctionnement d'un syst\u00e8me r\u00e9el \u00e0 l'aide d'un syst\u00e8me informatique. Les programmes qui accomplissent des simulations se distinguent des autres programmes en respectant les guides suivants :</p> <code>Ex\u00e9cution en temps r\u00e9el</code> <p>La simulation doit s'ex\u00e9cuter sur un intervalle de temps semblable \u00e0 celui r\u00e9el. La plupart des simulations prendront au plus un temps similaire \u00e0 l'ex\u00e9cution du ph\u00e9nom\u00e8ne r\u00e9el. On retrouve des exceptions \u00e0 cette r\u00e8gle notamment dans la simulation visant \u00e0 repr\u00e9senter des ph\u00e9nom\u00e8nes avec un grand degr\u00e9 de pr\u00e9cision. </p> <code>Abstraction (repr\u00e9sentation) des concepts</code> <p>La simulation traite num\u00e9riquement des concepts r\u00e9els (qui sont g\u00e9n\u00e9ralement quantifi\u00e9s). Cette abstraction permet de respecter ou d'imiter des r\u00e8gles et des ph\u00e9nom\u00e8nes r\u00e9els avec un degr\u00e9 de pr\u00e9cision variable. Dans tous les cas, les concepts du monde r\u00e9el qui ont un impact sur la simulation doivent \u00eatre repr\u00e9sent\u00e9s dans cette forme.  </p> <code>D\u00e9finition restreinte des entr\u00e9es</code> <p>Rares sont les syst\u00e8mes r\u00e9els qui op\u00e8rent en bo\u00eete noire (un syst\u00e8me constant n'est pas tr\u00e8s pertinent \u00e0 simuler...). Les entr\u00e9es des syst\u00e8mes doivent donc aussi \u00eatre repr\u00e9sent\u00e9es, mais souvent de fa\u00e7on restreinte. C'est-\u00e0-dire que seul un sous-ensemble de toutes les op\u00e9rations possibles peut \u00eatre effectu\u00e9 dans la simulation. Les actions sont repr\u00e9sent\u00e9es sont souvent choisies en fonction de leur pertinence et de la difficult\u00e9 d'impl\u00e9mentation.</p> <code>D\u00e9finition des sorties \u00e0 partir d'un ensemble de r\u00e8gles</code> <p>Les syst\u00e8mes r\u00e9els r\u00e9agissent aux entr\u00e9es et aux interactions entre les composantes pour produire un r\u00e9sultat (une sortie). Par exemple, en termes d'interactions sociales, on peut difficilement pr\u00e9voir le r\u00e9sultat exact d'une conversation (les r\u00e8gles qui les r\u00e9gissent sont trop complexes), mais il est facile d'avoir une discussion sans choquer l'autre personne. La simulation ne peut prendre en compte l'ensemble des r\u00e8gles et se restreint encore une fois \u00e0 des r\u00e8gles g\u00e9n\u00e9ralement quantifi\u00e9es.   </p> <p>Simulation de voiture</p> <p>Voici l'application des caract\u00e9ristiques de la simulation au contexte de la conduite d'une voiture.</p> <ul> <li>Temps d'ex\u00e9cution : la simulation doit s'ex\u00e9cuter en temps r\u00e9el (ratio de temps 1:1)</li> <li>Concepts repr\u00e9sent\u00e9s : d\u00e9placement de la voiture, routes, obstacles sur le chemin, accident, environnement</li> <li>Entr\u00e9es possibles : d\u00e9placement du v\u00e9hicule (gauche, droite, avant, arri\u00e8re), temps de la journ\u00e9e, condition de route, m\u00e9t\u00e9o...</li> <li>R\u00e8gles : r\u00e8gles de la circulation (certaines seulement), r\u00e9action des autres usagers de la route, physique (glace, aquaplanage, d\u00e9rapage)...</li> </ul> <p>Simulation de file d'attente d'\u00e9picerie</p> <p>Identifiez les caract\u00e9ristiques d'une simulation de file d'attente \u00e0 l'\u00e9picerie \u00e0 l'aide des questions suivantes.</p> <ul> <li>Quel est le temps d'ex\u00e9cution ?</li> <li>Quels sont les principaux concepts \u00e0 repr\u00e9senter ? Qu'est-ce qu'on utilise pour abstraire ces concepts ?</li> <li>Quelles sont les entr\u00e9es possibles \u00e0 la simulation ?</li> <li>Quelles sont les principales r\u00e8gles de la simulation ? Quelles pourraient \u00eatre les sorties de la simulation ?</li> </ul>"},{"location":"jeu-simulation/#les-jeux","title":"Les jeux","text":"<p>M\u00e9canique de jeu</p> <p>M\u00e9canique de jeu (game mechanic) : Ensemble de r\u00e8gles qui d\u00e9finissent la mani\u00e8re de jouer \u00e0 un jeu vid\u00e9o, d'interagir avec l'environnement, lors d'une partie, et qui sont destin\u00e9es \u00e0 produire une exp\u00e9rience de jeu agr\u00e9able (GDT, 2010).</p> <p>Le terme gameplay est un peu diff\u00e9rent des m\u00e9caniques de jeu. Traduit par \u00ab\u00a0jouabilit\u00e9\u00a0\u00bb, il r\u00e9f\u00e8re aux r\u00e8gles et m\u00e9caniques avec lesquelles la personne joueuse interagit avec le jeu. On peut voir la jouabilit\u00e9 comme des r\u00e8gles externes et les m\u00e9caniques par des r\u00e8gles internes. Toutefois, la distinction entre les deux n'est pas toujours facile \u00e0 faire.</p>"},{"location":"jeu-simulation/#les-jeux-comme-une-simulation","title":"Les jeux comme une simulation","text":"<p>On peut voir les jeux comme une simulation sans la contrainte que les r\u00e8gles (m\u00e9caniques) sont calqu\u00e9es du monde r\u00e9el. Dans ce cas, on r\u00e9interpr\u00e8te simplement les m\u00eames caract\u00e9ristiques qu'\u00e9nonc\u00e9es pr\u00e9c\u00e9demment.</p> <p>Identification des m\u00e9caniques de jeu et d'\u00e9l\u00e9ments de jouabilit\u00e9</p> <ul> <li>Nommez un jeu dont le temps d'ex\u00e9cution est r\u00e9el, un dont le temps est compress\u00e9.</li> <li>Nommez deux abstractions de concepts fr\u00e9quemment utilis\u00e9s dans les jeux.</li> <li>Nommez deux entr\u00e9es fr\u00e9quemment utilis\u00e9es dans les jeux.</li> <li>Nommez deux r\u00e8gles que tout le monde connait dans un jeu qui ont peu de sens dans le monde r\u00e9el.</li> </ul> <p>Toutefois, c'est rarement la qualit\u00e9 de la simulation qui nous incite \u00e0 jouer \u00e0 jeu. D'o\u00f9 la motivation peut-elle bien provenir alors ?</p>"},{"location":"jeu-simulation/#les-jeux-comme-un-probleme","title":"Les jeux comme un probl\u00e8me","text":"<p>Le cerveau humain est une machine \u00e0 r\u00e9soudre des probl\u00e8mes et aime particuli\u00e8rement les r\u00e9soudre. On peut d\u00e9finir un jeu comme un probl\u00e8me \u00e0 r\u00e9soudre auquel l'on ajoute un contexte.</p> <p>Quote</p> <p>Let's picture a mass murder game wherein there is a gas chamber shaped like a well. You the player are dropping innocent victims down into the gas chamber, and they come in all shapes and sizes. There are old ones and young ones, fat ones and tall ones. As they fall to the bottom, they grab onto each other and try to from human pyramids to get to the top of the well. Should they manage to get out, the game is over and you lose. But if you pack them in tightly enough, the ones on the bottom succumb to the gas and die (Koster, 2013).</p> <p>Imaginons un jeu d'extermination dans lequel il y a une chambre \u00e0 gaz de la forme d'un puit. Vous, la personne joueuse, lancez d'innocentes victimes dans la chambre gaz; victimes qui prennent diverses formes et tailles. Il y en a des vieilles et des jeunes, des grosses et des grandes. Dans leur chute, elles s'accrochent les unes aux autres et tentent de former une pyramide humaine pour atteindre le dessus du puit. Si elles parviennent \u00e0 s'\u00e9chapper, la partie est termin\u00e9e et vous avez perdu. Cependant, si vous les compactez assez serr\u00e9, celles dans le bas succombent au gaz et meurent (Koster, 2013. Traduit de l'anglais).</p> <p>La description de ce jeu semble assez horrible de par son contexte gore et morbide. Cependant les m\u00eames m\u00e9caniques, exploit\u00e9es dans un contexte diff\u00e9rent avec de simples formes g\u00e9om\u00e9triques (polyominos de degr\u00e9s 4), offrent le c\u00e9l\u00e8bre jeu de Tetris.</p>"},{"location":"jeu-simulation/#comment-bien-definir-un-probleme-dans-un-jeu-et-les-pieges","title":"Comment bien d\u00e9finir un probl\u00e8me dans un jeu et les pi\u00e8ges","text":""},{"location":"jeu-simulation/#trouver-une-structure-dans-le-flou","title":"Trouver une structure dans le flou","text":"<p>La premi\u00e8re condition \u00e0 l'obtention d'un probl\u00e8me int\u00e9ressant est que la solution au probl\u00e8me ne soit pas \u00e9vidente. Pour permettre \u00e0 la personne joueuse de trouver la solution, on pr\u00e9sente plusieurs instances du probl\u00e8me et tranquillement elle remarque les similitudes et d\u00e9duit la solution.</p> <p>Par exemple, apprendre dans un jeu la s\u00e9quence de combat d'un ennemi est le rep\u00e9rage d'une structure dans le flou.</p>"},{"location":"jeu-simulation/#difficulte-du-probleme","title":"Difficult\u00e9 du probl\u00e8me","text":"<p>La difficult\u00e9 d'un probl\u00e8me est tr\u00e8s subjective et notre sensibilit\u00e9 \u00e0 cette difficult\u00e9 l'est tout autant. Pour rendre un jeu agr\u00e9able, il faut donc moduler cette difficult\u00e9 selon l'avancement du joueur. G\u00e9n\u00e9ralement, les niveaux de difficult\u00e9 dans un jeu font appel simplement au changement de valeurs, mais elles pourraient aussi s'appliquer sur des m\u00e9caniques de jeu ou la vitesse d'introduction de celles-ci.</p> <p>Par exemple, les quatre premiers ennemis pourraient avoir une s\u00e9quence de combat compos\u00e9 de deux mouvements et le cinqui\u00e8me ennemi introduit un troisi\u00e8me mouvement et ainsi de suite.</p>"},{"location":"jeu-simulation/#accoutumance-au-probleme","title":"Accoutumance au probl\u00e8me","text":"<p>\u00c0 force de r\u00e9soudre le m\u00eame probl\u00e8me, on y devient habitu\u00e9 et alors deux choses se produisent :</p> <ul> <li>Le probl\u00e8me devient plus simple \u00e0 r\u00e9soudre (on s'attend aux mouvements de l'ennemi)</li> <li>On peut appliquer la solution \u00e0 des contextes diff\u00e9rents (en rep\u00e9rant un nouvel ennemi, on cherchera d'abord \u00e0 apprendre sa s\u00e9quence)</li> </ul>"},{"location":"jeu-simulation/#tout-devient-un-clou","title":"Tout devient un clou","text":"<p>\u00c0 force de combats, on chercherait toujours \u00e0 apprendre les s\u00e9quences. Le sentiment de puissance v\u00e9cu les deux ou trois premi\u00e8res fois que l'on domine un combat car on sait \u00e0 quoi s'attendre peut \u00eatre int\u00e9ressant, mais rapidement le cerveau manque de stimulation : le probl\u00e8me est trop simple. </p> <p>C'est \u00e0 ce moment que l'on d\u00e9stabilise la personne joueuse en introduisant quelque chose qui change la fa\u00e7on d'aborder le probl\u00e8me. Par exemple au lieu que chaque ennemi ait une s\u00e9quence propre, les s\u00e9quences de deux ennemis peuvent interagir ou si le combat devient trop long (on prend le temps d'\u00e9tudier la s\u00e9quence avant d'agir) l'ennemi appelle des renforts.</p> <p>Le changement de m\u00e9canique est tr\u00e8s d\u00e9stabilisant, car la personne joueuse est habitu\u00e9e de r\u00e9gler les probl\u00e8mes d'une fa\u00e7on particuli\u00e8re (tout est un clou), alors il faut en user avec parcimonie.</p>"},{"location":"jeu-simulation/#references","title":"R\u00e9f\u00e9rences","text":"<p>KOSTER, Raph. A Theory of Fun for Game Design. O'Reilly , 2e \u00e9dition, 2013, 279p.</p> <p>M\u00e9canique de jeu. (2010). Dans Grand dictionnaire terminologique. Office qu\u00e9b\u00e9cois de la langue fran\u00e7aise. https://vitrinelinguistique.oqlf.gouv.qc.ca/fiche-gdt/fiche/26502525/mecanique-de-jeu</p>"},{"location":"maths/bezier/","title":"Courbes de B\u00e9zier","text":"<p> Contenus de la page</p> <p>1-5 Types de jeu et leurs caract\u00e9ristiques  Ce contenu est de l'enrichissement et ne figure pas au contenu du cours.</p> <p> Temps requis</p> <p>10 minutes</p>"},{"location":"maths/deplacements/","title":"D\u00e9placement dans l'espace","text":"<p> Contenus de la page</p> <p>1-1 D\u00e9placement des objets de la simulation dans l'espace tridimensionnel</p> <p> Temps requis</p> <p>15 minutes</p> <p>Voici un probl\u00e8me de d\u00e9placement classique de jeux vid\u00e9os : </p> <p>Timmy se trouve \u00e0 la position \\(\\mathbf{t} = (2, 0, 4)\\) et souhaite se rendre jusqu'\u00e0 son fr\u00e8re, Larry, qui se trouve \u00e0 la position \\(\\mathbf{\\ell} = (9, 2, 6)\\). Timmy poss\u00e8de d'obscurs pouvoirs lui permettant de voler et de traverser tous les objets qui pourraient se trouver sur son passage (autrement dit, il se d\u00e9place en ligne droite) et il parcourt 3 m\u00e8tres par seconde. Supposons que le jeu s'ex\u00e9cute \u00e0 60 fps. Trouver la position de Timmy apr\u00e8s 45 frames, puis \u00e9crivez l'algorithme en C# du d\u00e9placement de Timmy.</p>"},{"location":"maths/deplacements/#la-resolution-mathematique","title":"La r\u00e9solution math\u00e9matique","text":"<p>1) Trouver le vecteur de direction entre Timmy et Larry</p> <p>Pour trouver ce vecteur, on soustrait la position finale \u00e0 la position initiale. $$ \\mathbf{d} = \\mathbf{\\ell} - \\mathbf{t} = (9, 2, 6) - (2, 0, 4) = (7, 2, 2) $$</p> <p>2) Trouver la vitesse de d\u00e9placement par frame de Timmy</p> <p>Il suffit de diviser sa vitesse de d\u00e9placement par le nombre de fps. $$ \\text{vitesse par frame} = 3 / 60 = 0.05 $$</p> <p>3) Trouver la quantit\u00e9 de d\u00e9placement de Timmy par frame</p> <p>On sait que Timmy avance de 0.05 m\u00e8tre par frame, on veut maintenant savoir combien cela repr\u00e9sente sur le vecteur de direction entre sa position et celle de Larry. On doit donc d'abord normer le vecteur de direction trouv\u00e9 \u00e0 l'\u00e9tape (1), puis r\u00e9duire sa longueur \u00e0 0.05 (voir propri\u00e9t\u00e9 des normes) $$ \\mathbf{d'} = \\frac{\\mathbf{d}}{|\\mathbf{d}|} = \\frac{1}{7.55}(7, 2, 2) = (0.9272, 0.2649, 0.2649) $$</p> <p>Le vecteur de d\u00e9placement de Timmy sera not\u00e9 \\(\\mathbf{d_{Timmy}}\\). $$ \\mathbf{d_{Timmy}} = 0.05(0.9272, 0.2649, 0.2649) = (0.0464, 0.0132, 0.0132)$$</p> <p>4) Trouver le d\u00e9placement pour 45 frames et d\u00e9terminer la position</p> <p>On multiplie le d\u00e9placement par frame par 45 pour obtenir le d\u00e9placement pour 45 frames (\\(\\mathbf{d_{Timmy, 45}}\\)) $$ \\mathbf{d_{Timmy, 45}} = 45\\mathbf{d_{Timmy}} = (2.088, 0.596, 0.596) $$</p> <p>On trouve la position en additionnant le d\u00e9placement \u00e0 la position de d\u00e9part. $$ \\mathbf{p_{Timmy, 45}} = \\mathbf{t} + \\mathbf{d_{Timmy, 45}} = (2, 0, 4) + (2.088, 0.596, 0.596) = (4.088, 0.596, 4.596) $$</p> <p>5) R\u00e9ponser et conclusion Apr\u00e8s 45 frames, Timmy est \u00e0 la position (4.088, 0.596, 4.596).</p>"},{"location":"maths/deplacements/#le-code-dans-unity","title":"Le code dans Unity","text":"Calcul du d\u00e9placement de Timmy<pre><code> // Donn\u00e9es du probl\u00e8me\n Vector3 posTimmy = new Vector3(2.0f, 0.0f, 4.0f);\n Vector3 posLarry = new Vector3(9.0f, 2.0f, 6.0f);\n float vitesseTimmy = 3.0f;\n float nombreFrames = 45;\n\n // \u00c9tape 1\n Vector3 direction = posLarry - posTimmy;\n // \u00c9tape 2\n float vitesseTimmyFrame = vitesseTimmy * Time.deltaTime; // Time.deltaTime retourne le temps de rendu de la frame, donc 1/fps \n // \u00c9tape 3\n Vector3 deplacementTimmy = direction.normalized * vitesseTimmyFrame * nombreFrames;\n // \u00c9tape 4\n posTimmy += deplacementTimmyFrame\n</code></pre>"},{"location":"maths/deplacements/#application-dans-un-jeu-unity","title":"Application dans un jeu Unity","text":"<p>Avec les fonctionnalit\u00e9s du moteur de jeu et la boucle de jeu, le code suivant est utilis\u00e9 dans le passage de la boucle.</p> D\u00e9placement lin\u00e9aire entre deux positions<pre><code>// Dans la m\u00e9thode Update ou FixedUpdate\nVector3 direction = (posLarry - posTimmy).normalized;\nposTimmy += direction * vitesseTimmy * Time.deltaTime; \n</code></pre>"},{"location":"maths/rotations/","title":"Rotations et quaternions","text":"<p> Contenus de la page</p> <p>1-1 D\u00e9placement des objets de la simulation dans l'espace tridimensionnel</p> <p> Temps requis</p> <p>15 minutes</p> <p>La rotation s'op\u00e8re toujours autour d'un axe. La rotation entra\u00eene un changement de perspective dans le plan perpendiculaire \u00e0 l'axe de rotation. Une rotation autour de l'axe y, entra\u00eene un changement de perspective dans le plan XZ. Du point de vue du joueur, cela signifierait qu'un personnage tourne sur lui-m\u00eame par exemple. Les rotations positives sont dans le sens horaire dans Unity, contrairement \u00e0 la r\u00e9f\u00e9rence admise en math\u00e9matique o\u00f9 les rotations positives sont en sens antihoraires.</p> <p>Comme vous avez s\u00fbrement vu en math\u00e9matiques, on peut repr\u00e9senter une rotation dans l'espace par une matrice de rotation de coordonn\u00e9es homog\u00e8nes de dimensions 4x4. Il existe aussi un objet math\u00e9matique, le quaternion, qui peut \u00eatre utilis\u00e9 pour repr\u00e9senter des rotations. Le gain de performance observ\u00e9 peut \u00eatre de l'ordre de 1800 %, soit 18 fois plus performant (Gavilan, 2016).</p>"},{"location":"maths/rotations/#les-quaternions","title":"Les quaternions","text":"<p>Un quaternion est un nombre en 4 dimensions (1 r\u00e9el et 3 imaginaires). Il n'est pas important dans le contexte du cours de comprendre la structure des quaternions. Il faut simplement retenir ceci : l'objet quaternion a les composantes w, x, y et z auquel on peut directement acc\u00e9der. Les composantes *x, y* et *z* ne repr\u00e9sentent pas des rotations autour des axes correspondants. Il s'agit de donn\u00e9es ayant une autre signification et que vous ne devez jamais modifier directement.</p>"},{"location":"maths/rotations/#le-systeme-eulerien","title":"Le syst\u00e8me Eul\u00e9rien","text":"<p>Le syst\u00e8me des rotations Eul\u00e9rien permet de repr\u00e9senter une rotation selon les trois axes x, y et z. Chaque valeur de rotation peut se situer entre 0 et 360 (les deux valeurs existent, mais les utiliser les deux peut vous poser probl\u00e8me...). La valeur de rotation de l'axe indique une rotation autour d'un axe.</p> <p>Ce sont des valeurs indiqu\u00e9es dans ce syst\u00e8me qui sont affich\u00e9es dans l'\u00e9diteur (les conversions en quaternion se font implicitement par l'\u00e9diteur).</p>"},{"location":"maths/rotations/#manipuler-des-rotations-avec-unity","title":"Manipuler des rotations avec Unity","text":"<p>La m\u00e9thode <code>Rotate</code> de <code>transform</code> permet de faire une rotation d'un objet. Cette m\u00e9thode accepte les valeurs des 3 axes, ainsi que l'espace dans lequel faire la rotation.</p> <p>La m\u00e9thode <code>RotateAround</code> permet de calculer une rotation autour d'un point autre (exemple : plan\u00e8tes autour du soleil), selon un axe de rotation et un nombre de degr\u00e9s selon lequel pivoter.</p> <pre><code> // Rotation autour de l'axe des y de 90 en sens anti-horaire\n transform.Rotate(0f, -90f, 0f, Space.World);\n\n // Rotation autour de l'axe x de 15 degr\u00e9s de plus que le parent en sens horaire\n transform.Rotate(15f, 0f, 0f, Space.Local);\n\n // Rotation de 90 degr\u00e9s en sens horaire sur l'axe des y par rapport au point (5, -5, 4)\n transform.RotateAround(new Vector3(5, -5, 4), Vector3.up, 90f);\n</code></pre>"},{"location":"maths/rotations/#conversions-degres-radians","title":"Conversions degr\u00e9s / radians","text":"<p>Pour convertir un angle de degr\u00e9s vers un angle en radian (et vice-versa), deux constantes de <code>Mathf</code> sont utiles. La constante <code>Deg2Rad</code> convertit de degr\u00e9s vers radians et <code>Rad2Deg</code> effectue la conversion inverse. On doit multiplier les angles par ces constantes pour op\u00e9rer les conversions. </p> <p>Notons que bien que les angles sont exprim\u00e9s en degr\u00e9s dans Unity, les fonctions trigonom\u00e9triques utilisent les valeurs en radians (et les fonctions trigonom\u00e9triques inverses retournent leur r\u00e9ponse en radians).</p>"},{"location":"maths/rotations/#references","title":"R\u00e9f\u00e9rences","text":"<p>GAVILAN, David. Performance of quaternions in the GPU, https://tech.metail.com/performance-quaternions-gpu/, publi\u00e9 le 13 septembre 2016 [consult\u00e9 le 19 ao\u00fbt 2022].</p>"},{"location":"maths/vecteurs_3d/","title":"Rappels sur les vecteurs 3D","text":"<p> Contenus de la page</p> <p>1-1 D\u00e9placement des objets de la simulation dans l'espace tridimensionnel</p> <p> Temps requis</p> <p>15 minutes</p>"},{"location":"maths/vecteurs_3d/#referentiels","title":"R\u00e9f\u00e9rentiels","text":"<p>On appelle r\u00e9f\u00e9rentiel un syst\u00e8me d'axe positionn\u00e9 dans l'espace. Dans Unity, il est possible de d\u00e9placer, faire pivoter ou mettre \u00e0 l'\u00e9chelle des objets selon deux r\u00e9f\u00e9rentiels. Le premier est le r\u00e9f\u00e9rentiel global. Les objets situ\u00e9s \u00e0 la racine de la sc\u00e8ne utilisent toujours ce r\u00e9f\u00e9rentiel. Le point (0, 0, 0) est appel\u00e9 l'origine du monde.</p> <p>Les objets qui sont enfants d'autres objets (dans la vue hi\u00e9rarchique) utilisent toujours le r\u00e9f\u00e9rentiel relatif \u00e0 leur parent, appel\u00e9 r\u00e9f\u00e9rentiel local. Le point (0, 0, 0) du r\u00e9f\u00e9rentiel local est l'origine du parent. Les translations, rotations et mises \u00e0 l'\u00e9chelle indiqu\u00e9es dans l'\u00e9diteur sont mesur\u00e9es dans ce r\u00e9f\u00e9rentiel.</p> <p>Le fait de rendre un objet enfant d'un autre ne modifiera pas ses caract\u00e9ristiques. L'objet enfant prendra les bonnes valeurs de transformation locale pour demeur\u00e9 inchang\u00e9 d'un point de vue global. </p> <p>Les translations et rotations peuvent \u00eatre faites dans le r\u00e9f\u00e9rentiel global ou local tandis que les mises \u00e0 l'\u00e9chelle sont toujours locales. Il faut donc porter attention \u00e0 la m\u00e9thode utilis\u00e9e. </p> <p>Question</p> <p>Si un objet parent est aux coordonn\u00e9es globales (2, 4, -2) et poss\u00e8de un enfant en coordonn\u00e9es locales (5, -7, 4), quelles sont les coordonn\u00e9es globales de l'objet enfant et qu'est-ce que ces coordonn\u00e9es signifient ?</p> Solution \\[ \\text{coordonnees globales} = \\text{coordonnees globales parent} + \\text{coordonnees locales enfants}\\\\ = (2, 4, -2) + (5, -7, 4)\\\\ = (7, -3, 2) \\] <p>Ces coordonn\u00e9es signifient qu'un observateur externe verra l'objet \u00e0 la position (7, -3, 2).</p>"},{"location":"maths/vecteurs_3d/#definition-des-vecteurs","title":"D\u00e9finition des vecteurs","text":"<p>Les vecteurs sont une collection ordonn\u00e9e de nombres servant \u00e0 repr\u00e9senter une situation multidimensionnelle. On les retrouve dans les plusieurs champs des math\u00e9matiques, des statistiques \u00e0 l'alg\u00e8bre en passant par la th\u00e9orie des graphes. Les vecteurs peuvent aussi avoir une signification g\u00e9om\u00e9trique en repr\u00e9sentant une direction ou une position. Dans Unity les vecteurs sont repr\u00e9sent\u00e9s par des structures, <code>Vector2</code>, <code>Vector3</code> et <code>Vector4</code> pour les vecteurs r\u00e9els (les valeurs de chaque dimension sont repr\u00e9sent\u00e9es par des <code>float</code>) ainsi que <code>Vector2Int</code> et <code>Vector3Int</code> pour les vecteurs entiers (les valeurs de chaque dimension sont repr\u00e9sent\u00e9es par des <code>int</code>).</p> <p>Le syst\u00e8me bidimensionnel de Unity utilise uniquement les composantes x et y o\u00f9 l'axe x positif est un d\u00e9placement vers la droite et l'axe y positif un d\u00e9placement vers le haut. Le syst\u00e8me tridimensionnel ajoute la composante z et l'axe z positif est un d\u00e9placement vers l'avant (s'\u00e9loigne de l'utilisateur). Le syst\u00e8me est orient\u00e9 de fa\u00e7on n\u00e9gative (r\u00e8gle de la main gauche).</p> La figure de gauche illustre le syst\u00e8me de Unity, celle de droite celui de Blender. Le syst\u00e8me de Blender correspond \u00e0 celui g\u00e9n\u00e9ralement admis en math\u00e9matique  <p>Convention des math\u00e9matiques</p> <p>Par convention, le gras sera utilis\u00e9 pour d\u00e9noter les vecteurs et la fonte r\u00e9guli\u00e8re pour les nombres. </p>"},{"location":"maths/vecteurs_3d/#operations-sur-les-vecteurs","title":"Op\u00e9rations sur les vecteurs","text":"<p>Soient deux vecteurs \\(\\mathbf{u} = (x_u, y_u, z_u) \\text{, } \\mathbf{v} = (x_v, y_v, z_v),\\) et \\(a\\) un nombre r\u00e9el, alors on peut d\u00e9finir les op\u00e9rations suivantes :</p>"},{"location":"maths/vecteurs_3d/#addition-de-vecteurs","title":"Addition de vecteurs","text":"<p>L'addition de vecteur permet de d\u00e9terminer le vecteur r\u00e9sultant de l'action de plusieurs vecteurs, par exemple, le d\u00e9placement total d'un objet apr\u00e8s une s\u00e9rie de d\u00e9placement. </p> <p>On peut aussi appliquer un vecteur de d\u00e9placement \u00e0 un vecteur de position pour obtenir la position apr\u00e8s le d\u00e9placement.</p> \\[ \\mathbf{u} + \\mathbf{v} = (x_u + x_v, y_u + y_v, z_u + z_v)\\] <p>Dans Unity, on additionne deux vecteurs de la fa\u00e7on suivante :</p> Addition de vecteurs<pre><code> Vector3 u = new Vector3(2.0f, 1.5f, 3.0f);\n Vector3 v = new Vector3(-1.0f, 0.5f, 0.75f);\n Vector3 resultat = u + v;    // (1.0f, 2.0f, 3.75f)\n</code></pre>"},{"location":"maths/vecteurs_3d/#norme-dun-vecteur","title":"Norme d'un vecteur","text":"<p>La norme d'un vecteur repr\u00e9sente sa longueur. Si le vecteur repr\u00e9sente une position, sa norme est aussi sa distance \u00e0 l'origine du plan (point de coordonn\u00e9es (0, 0, 0)). La norme est calcul\u00e9e de la fa\u00e7on suivante :</p> \\[\\|\\mathbf{u}\\| = \\sqrt{x_u^2 + y_u^2 + z_u^2}\\] <p>Dans Unity, on peut acc\u00e9der soit \u00e0 la norme (magnitude en anglais), soit au carr\u00e9 de la norme. </p> Calcul de la norme<pre><code> Vector3 u = new Vector3(2.0f, 6.0f, 3.0f);\n float normeU = u.magnitude;           // 7\n float normeCarreeU = u.sqrMagnitude;      // 49\n</code></pre> <p>Mais pourquoi la norme au carr\u00e9 ?</p> <p>Calculer une racine carr\u00e9e est tr\u00e8s long \u00e0 l'ordinateur, car un algorithme it\u00e9ratif (qui contient une boucle) est utilis\u00e9. Dans un contexte de programmation en temps r\u00e9el, le calcul d'une racine carr\u00e9e a peu d'impact, mais le calcul de 10 000 racines carr\u00e9s par frame peut ralentir l'ex\u00e9cution. Par cons\u00e9quent, si l'on souhaite comparer deux vecteurs pour savoir lequel est le plus long par exemple, on peut utiliser cette petite astuce math\u00e9matique pour sauver du temps de calcul $$ a &gt; b \\Leftrightarrow a^2 &gt; b^2  $$ Autrement dit, si l'on a pas besoin de conna\u00eetre la valeur de la norme, mais juste de trouver la plus grande (resp. plus petite) norme, on peut le faire beaucoup plus rapidement en omettant la racine.</p>"},{"location":"maths/vecteurs_3d/#multiplication-par-un-scalaire","title":"Multiplication par un scalaire","text":"<p>On peut changer la longueur d'un vecteur, sans changer sa direction, en multipliant celui par un scalaire. Cette op\u00e9ration peut \u00eatre utile pour g\u00e9rer la vitesse de d\u00e9placement comme nous le verrons plus tard.</p> <p>$$ a\\mathbf{u} = (au_x, au_y, au_z) $$ Les caract\u00e9ristiques du scalaire utilis\u00e9 d\u00e9terminent la longueur et le sens r\u00e9sultant :</p> <ul> <li>Si |a| &gt; 1, alors le vecteur obtenu est plus long</li> <li>Si |a| = 1, alors le vecteur obtenu est le m\u00eame que l'original</li> <li>Si |a| &lt; 1, alors le vecteur obtenu est plus court</li> <li>Si a &lt; 0, alors le vecteur obtenu suit la m\u00eame droite, mais dans le sens oppos\u00e9</li> </ul> <p>Dans Unity, on peut simplement utiliser l'op\u00e9rateur de multiplication pour effectuer la multiplication par un scalaire :</p> Multiplication par un scalaire<pre><code> Vector3 u = new Vector3(1.0f, 1.5f, -1.25f);\n Vector3 v = 2.0f * u;    // (2.0f, 3.0f, -2.5f);\n</code></pre>"},{"location":"maths/vecteurs_3d/#norme-et-normer-un-vecteur","title":"Norme et normer un vecteur","text":"<p>On peut aussi normer le vecteur, ce qui signifie de trouver le vecteur de m\u00eame sens, mais dont la norme est 1. Nous verrons plus tard un exemple o\u00f9 il est important de travailler avec des vecteurs de norme 1. Pour normer un vecteur, il suffit de diviser celui par sa norme. $$ \\mathbf{u'} = \\frac{1}{|\\mathbf{u}|}\\mathbf{u} $$ Dans Unity on peut normer le vecteur ou calculer le vecteur norm\u00e9 d'un vecteur.</p> Normalisation de vecteurs<pre><code> Vector3 u = new Vector3(3.0f, 6.0f, 6.0f); // La norme est de 9\n Vector3 uNorme = u.normalized;             // (0.33f, 0.66f, 0.66f)\n u.Normalize();                             // Change le contenu de u pour (0.33f, 0.66f, 0.66f)\n</code></pre>"},{"location":"maths/vecteurs_3d/#quelques-propriete-des-normes","title":"Quelques propri\u00e9t\u00e9 des normes","text":"<p>Un vecteur multipli\u00e9 par un scalaire a comme norme la valeur absolue du scalaire multipli\u00e9 par la norme originale du vecteur. </p> \\[ \\|a\\mathbf{u}\\| = |a|\\times \\|u\\| \\] <p>Donc si l'on multiplie un vecteur par la quantit\u00e9 0.5 par exemple, sa norme se trouve r\u00e9duite de moiti\u00e9. Cette propri\u00e9t\u00e9 permet de d\u00e9montrer l'op\u00e9ration de normage.</p> \\[ \\|u'\\| = \\left|\\frac{1}{\\|\\mathbf{u}\\|}\\right|\\times\\|\\mathbf{u}\\| = \\frac{\\|u\\|}{\\|u\\|} = 1 \\]"},{"location":"maths/vecteurs_3d/#references","title":"R\u00e9f\u00e9rences","text":"<p>Image de r\u00e9f\u00e9rentiel : https://i.imgur.com/SHHNGNX.jpg, r\u00e9cup\u00e9r\u00e9 le 10 ao\u00fbt 2022.</p>"}]}